name: 'Build Remède desktop applications'

on:
  push:
    branches:
      - dev

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs.
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04' # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.

        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm' # Set this to npm, yarn or pnpm.
          cache-dependency-path: app/package-lock.json

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install frontend dependencies
        # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
        working-directory: ./app
        run: npm install # change this to npm or pnpm depending on which one you use.

      # Additional windows configuration options
      - uses: actions/setup-python@v5
        if: matrix.platform == 'windows-latest'
        with:
          python-version: '3.10'
      - name: Make configuration changes for windows
        if: matrix.platform == 'windows-latest'
        run: |
          python app/src-tauri/windows_conf.py

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: __VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: '__VERSION__'
          releaseBody: '## `__VERSION__`: Unknown Codename
          Quick description...
          ## Associated issues
          - [ ]
          '
          releaseDraft: true
          prerelease: false
          projectPath: ./app
          args: ${{ matrix.args }}

      - name: Copy DEB binary
        if: matrix.platform == 'ubuntu-22.04'
        run: cp /home/runner/work/remede/remede/app/src-tauri/target/release/bundle/deb/*.deb /home/runner/work/remede/remede/builds/remede.deb

      - name: Copy x64 DMG binary
        if: matrix.platform == 'macos-latest' && matrix.args == '--target x86_64-apple-darwin'
        run: |
          cp /Users/runner/work/remede/remede/app/src-tauri/target/x86_64-apple-darwin/release/bundle/macos/*.app.tar.gz  /Users/runner/work/remede/remede/builds/remede.x64.app.tar.gz
          cp /Users/runner/work/remede/remede/app/src-tauri/target/x86_64-apple-darwin/release/bundle/dmg/*.dmg  /Users/runner/work/remede/remede/builds/remede.x64.dmg

      - name: Copy aarch64 DMG binary
        if: matrix.platform == 'macos-latest' && matrix.args == '--target aarch64-apple-darwin'
        run: |
          cp /Users/runner/work/remede/remede/app/src-tauri/target/aarch64-apple-darwin/release/bundle/macos/*.app.tar.gz  /Users/runner/work/remede/remede/builds/remede.aarch64.app.tar.gz
          cp /Users/runner/work/remede/remede/app/src-tauri/target/aarch64-apple-darwin/release/bundle/dmg/*.dmg  /Users/runner/work/remede/remede/builds/remede.aarch64.dmg

      - name: Copy MSI binary
        if: matrix.platform == 'windows-latest'
        run: |
          Copy-Item -Path "D:\a\remede\remede\app\src-tauri\target\release\bundle\nsis\*" -Destination "D:\a\remede\remede\builds" -Include *.msi
          Copy-Item -Path "D:\a\remede\remede\app\src-tauri\target\release\bundle\nsis\*" -Destination "D:\a\remede\remede\builds" -Include *.exe
          git restore app/package.json
          git restore app/src-tauri/Cargo.toml

      - name: Commit changes
        run: |
          git config --local user.name actions-user
          git config --local user.email "actions@github.com"
          git config pull.rebase true
          git add builds/*
          git commit -m "chore(binaries): added latest Remède binaries"
          git pull

      - name: Push changes # push the output folder to your repo
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: true
          branch: 'dev'
